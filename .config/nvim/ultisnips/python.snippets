priority 100

snippet #! "myUltiSnips" b
#!/usr/bin/env python
endsnippet

snippet cls "myUltiSnips" b
class $1:
	def __init__(self) -> None:
		super().__init__()
endsnippet

snippet def "myUltiSnips" b
def $1(self, $2):
	$0
endsnippet

snippet wrap "from functools import wraps; from typing import Callable" b
def $1(f) -> Callable:
	@wraps(f)
	def wrapper(*args, **kwargs):
		$0
		return f(*args, **kwargs)
	return wrapper
endsnippet

snippet distbreak "from torch import distributed as dist" b
if dist.get_rank() == 0:
	breakpoint()
else:
	dist.barrier()
endsnippet
