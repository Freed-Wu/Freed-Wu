---
"on":
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

# https://github.com/softprops/action-gh-release/issues/236
permissions:
  contents: write

env:
  CMAKE_GENERATOR: Ninja
  PYTHONUTF8: "1"
  python-version: 3.x
  cache: pip

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
          registry-url: https://registry.npmjs.org
      - name: Install dependencies
        run: |
          npm install
      - name: Test
        run: |
          npm test

  deploy-npm:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
          registry-url: https://registry.npmjs.org
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
        run: |
          npm publish

  deploy-cargo:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: ructions/toolchain@v1
        with:
          toolchain: nightly
      - name: Publish
        run: |
          cargo publish --token ${{secrets.CARGO_TOKEN}}

  build-wheels-and-test:
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-latest
            skip: "manylinux"
          - runs-on: ubuntu-latest
            skip: "musllinux"
          - runs-on: macos-latest
            skip: ""
          - runs-on: windows-latest
            skip: ""
    runs-on: ${{matrix.runs-on}}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
        if: runner.os == 'Linux'
      - uses: pypa/cibuildwheel@v2.16
        env:
          CIBW_SKIP: "*-${{matrix.skip}}_*"
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{matrix.runs-on}}-${{matrix.skip}}
          path: |
            wheelhouse/*.whl

  build:
    needs:
      - build-wheels-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{env.python-version}}
          cache: ${{env.cache}}
      - name: Install dependencies
        run: |
          pip install build
      - name: Build sdist
        run: python -m build -s
      - uses: actions/upload-artifact@v4
        if: "! startsWith(github.ref, 'refs/tags/')"
        with:
          name: artifact-sdist
          path: |
            dist/*
      - uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          merge-multiple: true
          path: dist
      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          # body_path: build/CHANGELOG.md
          files: |
            dist/*
      - uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          password: ${{secrets.PYPI_API_TOKEN}}

  deploy-aur:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: Freed-Wu/update-aur-package@v1.0.11
        if: startsWith(github.ref, 'refs/tags/')
        with:
          package_name: python-{{ expand('%:p:h:h:h:t') }}
          ssh_private_key: ${{secrets.AUR_SSH_PRIVATE_KEY}}

  deploy-nur:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Trigger Workflow
        run: >
          curl -X POST -d '{"ref": "main"}'
          -H "Accept: application/vnd.github.v3+json"
          -H "Authorization: Bearer ${{secrets.GH_TOKEN}}"
          https://api.github.com/repos/Freed-Wu/nur-packages/actions/workflows/version.yml/dispatches
