[build-system]
requires = ["setuptools_scm[toml] >= 6.2", "setuptools-generate >= 0.0.6"]
build-backend = "setuptools.build_meta"

# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[project]
name = "{{ expand('%:p:h:t') }}"
description = "{% here %}"
readme = "README.md"
# type_a | type_b
requires-python = ">= 3.10"
keywords = [""]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version", "dependencies", "optional-dependencies"]

[[project.authors]]
name = "{{ g:snips_author }}"
email = "{{ g:snips_email }}"

[project.license]
text = "GPL v3"

[project.urls]
Homepage = "https://{{ expand('%:p:h:t') }}.readthedocs.io"
Download = "{{ g:snips_github }}/{{ expand('%:p:h:t') }}/releases"
"Bug Report" = "{{ g:snips_github }}/{{ expand('%:p:h:t') }}/issues"
Source = "{{ g:snips_github }}/{{ expand('%:p:h:t') }}"

[project.scripts]
{{ expand('%:p:h:t') }} = "{{ substitute(expand('%:p:h:t'), '-', '_', 'g') }}.__main__:main"

[tool.setuptools.package-data]
{{ substitute(expand('%:p:h:t'), '-', '_', 'g') }} = ["py.typed", "assets/**"]

[tool.setuptools.data-files]
"share/applications" = ["assets/desktop/{{ expand('%:p:h:t') }}.desktop"]
"share/icons/hicolor/256x256/apps" = ["src/{{ substitute(expand('%:p:h:t'), '-', '_', 'g') }}/assets/images/{{ expand('%:p:h:t') }}.png"]
"share/man/man1" = ["sdist/{{ expand('%:p:h:t') }}.1"]
"share/bash-completion/completions" = ["sdist/{{ expand('%:p:h:t') }}"]
"share/zsh/site-functions" = ["sdist/_{{ expand('%:p:h:t') }}"]

[tool.setuptools.dynamic.dependencies]
file = "requirements.txt"

# begin: scripts/update-pyproject.toml.pl
[tool.setuptools.dynamic.optional-dependencies.dev]
file = "requirements/dev.txt"
# end: scripts/update-pyproject.toml.pl

[tool.setuptools_scm]
write_to = "src/{{ substitute(expand('%:p:h:t'), '-', '_', 'g') }}/_version.py"

[tool.setuptools-generate]
write-to = "src/{{ substitute(expand('%:p:h:t'), '-', '_', 'g') }}/_metainfo.py"

[tool.mdformat]
number = true

[tool.black]
line-length = 79

[tool.isort]
line_length = 79
profile = "black"

# https://github.com/PyCQA/pydocstyle/issues/418
[tool.pydocstyle]
add_ignore = "D205, D400"

[tool.doq]
template_path = "templates"

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "\\s*import tomli as tomllib",
]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]

[tool.cibuildwheel]
archs = ["all"]
skip = "*37-* *38-* *39-*"
before-test = "pip install -rrequirements.txt -rrequirements/dev.txt"
test-command = "pytest {project}"
