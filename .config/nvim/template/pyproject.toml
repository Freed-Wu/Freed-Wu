[build-system]
requires = ["setuptools >= 45", "setuptools_scm[toml] >= 6.2", "setuptools-generate"]
build-backend = "setuptools.build_meta"

# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[project]
name = "%DIR%"
description = "%HERE%"
authors = [{ name = "%USER%", email = "%MAIL%" }]
readme = "README.md"
requires-python = ">= 3.9"
keywords = [""]
license = { text = "GPL v3" }
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.urls]
Homepage = "https://%DIR%.readthedocs.io"
Download = "%GITHUB%/%DIR%/releases"
"Bug Report" = "%GITHUB%/%DIR%/issues"
Source = "%GITHUB%/%DIR%"

[project.scripts]
%DIR% = "%DIR%.__main__:main"

[tool.setuptools.package-data]
%DIR% = ["py.typed", "assets/*"]

[tool.setuptools.dynamic]
dependencies = { file = "requirements.txt" }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = "requirements/dev.txt" }

[tool.setuptools_scm]
write_to = "src/%DIR%/_version.py"

[tool.setuptools-generate]
write-to = "src/%DIR%/_metainfo.py"

[tool.black]
line-length = 79

[tool.isort]
line_length = 79
profile = "black"

# https://github.com/PyCQA/pydocstyle/issues/418
[tool.pydocstyle]
add_ignore = "D205, D400"

[tool.doq]
template_path = "templates"

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "\\s*import tomli as tomllib",
]

[tool.bandit.assert_used]
skips = [
  "*_test.py",
  "test_*.py",
]
