#! /usr/bin/env bash
mime=$(file -Lb --mime-type "$1")
category=${mime%%/*}
kind=${mime##*/}
ext=${1##*.}
if [ -d "$1" ]; then
  if [ "$(command -v exa)" ]; then
    exa --git -hl --color=always --icons "$1"
  fi
elif [ "$kind" = octet-stream ]; then
  if [[ "$1" = *events.out.tfevents.* ]]; then
    python <<EOF
from contextlib import suppress
import sys
from time import gmtime, strftime

import pandas as pd
import plotext as plt
from tensorboard.backend.event_processing.event_file_loader import (
    EventFileLoader,
)

file = "$1"
df = pd.DataFrame(columns=["Step", "Value"])
df.index.name = "YYYY-mm-dd HH:MM:SS"

for event in EventFileLoader(file).Load():
    with suppress(IndexError):
        df.loc[strftime("%F %H:%M:%S", gmtime(event.wall_time))] = [  # type: ignore
            event.step,  # type: ignore
            event.summary.value[0].tensor.float_val[0],  # type: ignore
        ]
df.index = pd.to_datetime(df.index)  # type: ignore
df.Step = df.Step.astype(int)
plt.plot(df.Step, df.Value, marker="braille")
plt.title(event.summary.value[0].metadata.display_name)  # type: ignore
plt.clc()
plt.show()
df.to_csv(sys.stdout, "\t")
EOF
  elif [ "$(command -v hexyl)" ]; then
    hexyl "$1"
  fi
elif [ "$kind" = plain ] && [ "$ext" = tsv ]; then
  if [ "$(command -v xsv)" ]; then
    xsv table -d'\t' "$1"
  fi
elif [ "$kind" = csv ]; then
  if [ "$(command -v bat)" ]; then
    bat -p "$1" --color=always | xsv table | bat -p --color=always
  fi
elif [ "$kind" = json ]; then
  if [ "$(command -v jupyter)" ] && [ "$(command -v bat)" ] && [ "$ext" = ipynb ]; then
    jupyter nbconvert --to python --stdout "$1" | bat --color=always -plpython
  elif [ "$(command -v jq)" ]; then
    jq -r . "$1" --color-output
  fi
elif [ "$kind" = pdf ]; then
  if [ "$(command -v pdftotext)" ] && [ "$(command -v sed)" ]; then
    pdftotext -q "$1" - | sed "s/\f/$(hr â”€)\n/"
  fi
elif [ "$kind" = vnd.openxmlformats-officedocument.wordprocessingml.document ]; then
  if [ "$(command -v pandoc)" ]; then
    pandoc "$1" -tmarkdown
  fi
elif [ "$kind" = vnd.openxmlformats-officedocument.spreadsheetml.sheet ] ||
  [ "$kind" = vnd.ms-excel ]; then
  if [ "$(command -v in2csv)" ] && [ "$(command -v xsv)" ] && [ "$(command -v bat)" ]; then
    in2csv "$1" | xsv table | bat -ltsv --color=always
  fi
elif [ "$category" = text ] || [ "$kind" = x-empty ] || [ "$kind" = pgp-keys ]; then
  if [ "$(command -v bat)" ]; then
    bat --color=always "$1"
  elif [ "$(command -v pygmentize)" ]; then
    pygmentize "$1" | less
  fi
elif [ "$kind" = blockdevice ]; then
  if [ "$(command -v findmnt)" ]; then
    findmnt "$1"
  fi
elif [ "$category" = image ]; then
  if [ "$(command -v chafa)" ]; then
    chafa -f symbols "$1"
  fi
  if [ "$(command -v exiftool)" ]; then
    exiftool "$1" | bat --color=always -plyaml
  fi
elif [ "$kind" = x-pie-executable ] || [ "$kind" = x-sharelib ]; then
  if [ "$(command -v ldd)" ]; then
    ldd "$1"
  fi
elif [ "$kind" = x-executable ] || [ "$kind" = java-archive ] || [ "$kind" = zstd ]; then
  if [ "$(command -v 7z)" ]; then
    7z l "$1"
  fi
elif [ -e "$1" ]; then
  if [ "$(command -v bat)" ] && [ "$(command -v lesspipe.sh)" ]; then
    lesspipe.sh "$1" | bat --color=always
  fi
fi
