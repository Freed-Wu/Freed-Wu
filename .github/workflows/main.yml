---
"on":
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

env:
  files: dist/*
  python-version: 3.x
  cache: pip

# disable windows
# invalid path '.password-store/https:/test.pypi.org/legacy/__token__.gpg'
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}
          cache: ${{ env.cache }}
      - name: Install dependencies
        run: |
          pip install build
      - name: Build
        run: |
          python -m build
      - uses: actions/upload-artifact@v3
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        with:
          path: |
            ${{ env.files }}
      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ env.files }}

  publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2.2.0
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/login-action@v2.2.0
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/freed-wu
            ghcr.io/${{ github.repository }}
      - uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: script/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
